=>  &.
    ++  coat  ,[p=barn q=vase]
    ++  pole
      #%  [& p=(map span pole)]
          [| p=vase]
      ==
    --
&.
::
++  gill
  =+  [tiq=_@ud sac=_(map barn note) rod=_pole]
  &=  pit=_vase
  ++  foo
    !!
  --
::
++  warp
  |=  [pol=_pole cot=_coat]
  =+  yad=(flop p.cot)
  |-  ^-  (unit pole)
  ?-    -.pol
      |  ~
      &
    ?~  yad
      ?:  =(~ p.pol)
        [~ [| q.cot]]
      ~
    =+  def=(~(get by p.pol) i.yad)
    =+  muz=$(yad t.yad, pol ?~(def [& ~] u.def))
    ?~(muz ~ [~ & (~(put by p.pol) i.yad u.muz)])
  == 
--
